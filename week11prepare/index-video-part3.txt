//import the express module
const express = require('express');
//create the path library
const path = require('path');

//create the node application
const app = express();

//create a port variable to stipulate which port heroku is going to use
//or else use PORT 5000 if port was not found at heroku
const PORT = process.env.PORT || 5000;

//access static files to be rendered or sent back to user
//from the public folder
app.use(express.static(path.join(__dirname, 'public')));

//to support json encoded bodies
//look for express json
app.use(express.json());

//helps to parse the body
//to support url encoded bodies
//look for things that are urlencoded and it wants a parameter here of whether or not to use extended
app.use(express.urlencoded({extended: true}));

//anything below here sets up rules and function calls

app.get('/topics', function(req, res) {
    //get the list of all topics
    console.log('Getting all topics...');
    
    //send response back to the user
    res.json();
    
});

//get a single topic by ID
app.get('/topic/:id', function(req, res){
    //query example
    //must have app.get('/topic') above
    //topic?id=1
    //anything after the ? is a query
    var id = req.query.id;
    
    //parameter example
    //set it to app.get('/topic/:id')
    //var id = req.params.id;
    
    console.log('Getting one topic with ID');
    
    //test
    //var results = {id:1, name:'faith'};
    
    //passes back the actual id that we're looking for by replacing 1  with id
    var results = {id:id, name:'faith'};
    
    //send response back to the user
    res.json(results);
});


//how to do a post
//ok to have the same end point /topic, because one is a get and this is a post
//use POSTMAN to test your post request
//more challenging to code a post request because 
    //your're trying to get information from the body of the request
    //so you need to write some code to go through the body of this request
    //and then parse it out
    //and look for encoded things
    //and turn it into variables and use it
    //use express library (middleware) to do this (see above)
app.post('/topic', function(req, res){
    var name = req.body.name;
    
    console.log('Creating a new topic with name: ' + name);
    
    res.json({success:true});
});

//starts the server
app.listen(PORT, function(){
    console.log('Server listening on port ' + PORT);
})
